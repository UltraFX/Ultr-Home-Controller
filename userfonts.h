

/* Start of automatically generated font definition for bankgthd10. */

#ifndef MF_RLEFONT_INTERNALS
#define MF_RLEFONT_INTERNALS
#endif
#include "mf_rlefont.h"

#ifndef MF_RLEFONT_VERSION_4_SUPPORTED
#error The font file is not compatible with this version of mcufont.
#endif

static const uint8_t mf_rlefont_bankgthd10_dictionary_data[115] = {
    0x80, 0x08, 0x80, 0x02, 0x80, 0x01, 0x84, 0x04, 0x3d, 0x81, 0x08, 0x81, 0x01, 0x81, 0x01, 0x85, 
    0x05, 0x80, 0x21, 0x82, 0x1f, 0x80, 0x03, 0x80, 0x01, 0x80, 0x09, 0x07, 0x01, 0x84, 0x05, 0x82, 
    0x05, 0x81, 0x03, 0x80, 0x80, 0x04, 0x80, 0x03, 0x01, 0x81, 0x01, 0x28, 0x19, 0x0a, 0x04, 0x80, 
    0x04, 0x80, 0x03, 0x80, 0x05, 0x84, 0x18, 0x08, 0x06, 0x80, 0x80, 0x01, 0x80, 0x02, 0x81, 0x0e, 
    0x80, 0x02, 0x07, 0x80, 0x08, 0x09, 0x80, 0x01, 0x01, 0x80, 0x01, 0x83, 0x05, 0x21, 0x18, 0x35, 
    0x2d, 0x31, 0x85, 0x9c, 0x00, 0x36, 0xc6, 0x31, 0x2b, 0x25, 0x26, 0xe4, 0x28, 0x2e, 0x39, 0x21, 
    0x39, 0x00, 0x95, 0x2e, 0x1a, 0x21, 0x1a, 0xe5, 0x86, 0x00, 0x28, 0xfe, 0x39, 0x95, 0x24, 0x88, 
    0x31, 0x23, 0x23, 
};

static const uint16_t mf_rlefont_bankgthd10_dictionary_offsets[48] = {
    0x0000, 0x0003, 0x0006, 0x0008, 0x000d, 0x000f, 0x0010, 0x0012, 
    0x0013, 0x0014, 0x0016, 0x0019, 0x001b, 0x001c, 0x001e, 0x0020, 
    0x0024, 0x0027, 0x0028, 0x002b, 0x002c, 0x002d, 0x002e, 0x0030, 
    0x0037, 0x0038, 0x003a, 0x003d, 0x003f, 0x0040, 0x0042, 0x0045, 
    0x0048, 0x004b, 0x004d, 0x0054, 0x0058, 0x005b, 0x005d, 0x005f, 
    0x0061, 0x0063, 0x0065, 0x0069, 0x006b, 0x006e, 0x0071, 0x0073, 
};

static const uint8_t mf_rlefont_bankgthd10_glyph_data_0[698] = {
    0x04, 0x00, 0x10, 0x04, 0x21, 0x18, 0x18, 0xe5, 0x2d, 0x64, 0x10, 0x03, 0x84, 0x54, 0x24, 0x89, 
    0x54, 0x10, 0x08, 0xe4, 0x37, 0x85, 0x98, 0x41, 0xee, 0x64, 0x39, 0x89, 0x54, 0x10, 0x08, 0x24, 
    0x34, 0x88, 0x41, 0x99, 0x41, 0xa8, 0x41, 0xf8, 0x10, 0x08, 0x2c, 0x64, 0x91, 0x58, 0x64, 0xa3, 
    0x94, 0x89, 0x76, 0x10, 0x08, 0x00, 0x21, 0x8b, 0x4c, 0x31, 0x9f, 0x88, 0x87, 0x73, 0x10, 0x02, 
    0xfc, 0x3b, 0x10, 0x03, 0x2c, 0x36, 0x46, 0x46, 0xfe, 0x10, 0x03, 0x21, 0x2d, 0x23, 0x46, 0x18, 
    0x10, 0x05, 0x2c, 0x36, 0x8b, 0x54, 0x10, 0x08, 0x84, 0x3b, 0x84, 0x83, 0x31, 0x45, 0x10, 0x03, 
    0x1b, 0x36, 0x10, 0x03, 0xc4, 0x2b, 0x64, 0x10, 0x03, 0x1b, 0x10, 0x03, 0x2c, 0x36, 0xe5, 0x31, 
    0x3b, 0x10, 0x08, 0x42, 0x28, 0x3d, 0x41, 0x10, 0x08, 0x1f, 0xff, 0x37, 0x3b, 0x10, 0x08, 0x42, 
    0xdc, 0x26, 0x88, 0x82, 0x10, 0x08, 0x3f, 0x94, 0x31, 0x23, 0xc6, 0x80, 0x10, 0x08, 0x1f, 0x8a, 
    0x54, 0x31, 0x88, 0x80, 0x18, 0x10, 0x08, 0x3f, 0x85, 0x41, 0x1e, 0x41, 0x10, 0x08, 0x1f, 0x20, 
    0x64, 0x24, 0x82, 0x3d, 0x41, 0x10, 0x08, 0x21, 0x20, 0x47, 0x9c, 0x36, 0x18, 0x10, 0x08, 0x42, 
    0xa2, 0x3d, 0x41, 0x10, 0x08, 0x42, 0x20, 0x8b, 0x64, 0x26, 0x10, 0x03, 0x3a, 0x10, 0x03, 0x3a, 
    0x36, 0x10, 0x08, 0x1f, 0x22, 0x64, 0x85, 0x87, 0x64, 0x85, 0x64, 0x10, 0x08, 0x2b, 0x82, 0x34, 
    0x1d, 0x10, 0x08, 0x21, 0xc4, 0x26, 0x24, 0x9c, 0x26, 0x64, 0x10, 0x07, 0x21, 0x8b, 0x8c, 0x18, 
    0x34, 0xb4, 0x10, 0x0a, 0x34, 0x93, 0x90, 0x48, 0x52, 0x5e, 0x98, 0x4d, 0x4e, 0x5a, 0xa3, 0x88, 
    0x86, 0x62, 0x10, 0x08, 0x1f, 0x18, 0xc6, 0x5c, 0x85, 0x1a, 0x65, 0x10, 0x08, 0x42, 0xa3, 0x3d, 
    0x41, 0x10, 0x08, 0x42, 0x85, 0x3d, 0x41, 0x10, 0x08, 0x3f, 0x28, 0x3d, 0x3d, 0x3e, 0x10, 0x08, 
    0x3f, 0xc5, 0x26, 0x36, 0x25, 0x10, 0x07, 0x3f, 0xc5, 0x26, 0x36, 0xfe, 0x10, 0x09, 0x21, 0x1a, 
    0x23, 0xbd, 0x3d, 0x41, 0x10, 0x09, 0x21, 0x3d, 0x3d, 0xe3, 0x3d, 0x3d, 0x10, 0x04, 0x21, 0x37, 
    0x3b, 0x10, 0x07, 0x29, 0x2c, 0x36, 0x86, 0x40, 0x2f, 0x08, 0x21, 0xa0, 0x6c, 0x84, 0x87, 0x54, 
    0x85, 0x76, 0x10, 0x07, 0x21, 0x37, 0x3b, 0xf3, 0x10, 0x09, 0x21, 0x00, 0x94, 0x90, 0x8a, 0x59, 
    0x4c, 0x48, 0x1e, 0x10, 0x09, 0x21, 0x3d, 0xd7, 0x54, 0x89, 0x76, 0x3d, 0x10, 0x09, 0x42, 0x28, 
    0x3d, 0x41, 0x10, 0x07, 0x42, 0xf3, 0x47, 0x37, 0x10, 0x09, 0x42, 0x28, 0x94, 0x8f, 0x80, 0x18, 
    0x10, 0x08, 0x42, 0x0f, 0xa3, 0x4c, 0x85, 0x75, 0x10, 0x08, 0x42, 0x1d, 0x24, 0x88, 0x82, 0x10, 
    0x06, 0x3f, 0x19, 0x3b, 0x10, 0x08, 0x21, 0x3d, 0x3d, 0x3d, 0x3d, 0xe3, 0x10, 0x07, 0x2c, 0x27, 
    0x35, 0x88, 0x85, 0x9e, 0x64, 0x18, 0x10, 0x09, 0x2c, 0x1e, 0x8c, 0x55, 0x89, 0x9e, 0x65, 0x90, 
    0x4c, 0x10, 0x07, 0x2c, 0x27, 0xe4, 0x98, 0x36, 0xfd, 0x85, 0x67, 0x10, 0x07, 0x2c, 0x64, 0x9c, 
    0x54, 0x3b, 0x10, 0x07, 0x21, 0x0f, 0x39, 0x90, 0x64, 0x36, 0x1d, 0x10, 0x03, 0x21, 0x0f, 0x3b, 
    0xe4, 0x64, 0x10, 0x03, 0x30, 0x34, 0x3b, 0x2d, 0x46, 0xfe, 0x10, 0x03, 0x2c, 0x64, 0x45, 0x24, 
    0x88, 0x64, 0x10, 0x0a, 0x2d, 0xb4, 0x84, 0x96, 0x3d, 0x10, 0x05, 0xc4, 0x34, 0x2b, 0x3f, 0x05, 
    0x34, 0x36, 0xf8, 0x10, 0x06, 0x00, 0x2b, 0x8a, 0x54, 0x84, 0xa2, 0x3d, 0x10, 0x07, 0x3c, 0x35, 
    0x2f, 0x06, 0x2b, 0x44, 0x2f, 0x07, 0x2b, 0xfa, 0x87, 0x48, 0x1e, 0x8c, 0x7c, 0x10, 0x06, 0x3c, 
    0x36, 0x25, 0x10, 0x06, 0x2b, 0xe2, 0x31, 0x24, 0xa0, 0x31, 0x10, 0x07, 0x2d, 0x3f, 0x23, 0x9d, 
    0x3e, 0x10, 0x07, 0x2b, 0x40, 0x3e, 0xfd, 0x88, 0x48, 0x10, 0x03, 0x2b, 0x38, 0x3b, 0x10, 0x06, 
    0xfc, 0x1f, 0x45, 0x31, 0x88, 0x7c, 0x10, 0x06, 0x2b, 0xe6, 0x87, 0x92, 0x64, 0x85, 0x68, 0x10, 
    0x06, 0x1f, 0x3b, 0x84, 0x7c, 0x10, 0x08, 0x2b, 0xe6, 0x88, 0x6a, 0x54, 0x89, 0x4e, 0x10, 0x07, 
    0x2b, 0xc6, 0x85, 0x9b, 0x94, 0x8b, 0x48, 0x10, 0x07, 0x2b, 0x44, 0x2f, 0x06, 0x2b, 0x44, 0x3e, 
    0x0f, 0x10, 0x07, 0x2b, 0x44, 0x2e, 0x8e, 0x7c, 0x18, 0x10, 0x07, 0x2b, 0x44, 0x3e, 0xdd, 0x10, 
    0x07, 0x3c, 0x1c, 0x2f, 0x06, 0x2b, 0xa3, 0x31, 0x45, 0x10, 0x07, 0x2b, 0xe6, 0x86, 0x40, 0x2f, 
    0x06, 0x2b, 0xff, 0x8c, 0x4c, 0x84, 0x8a, 0x64, 0x10, 0x08, 0x2b, 0x35, 0x8d, 0x70, 0x64, 0x8a, 
    0x70, 0x10, 0x06, 0x2b, 0xb7, 0x31, 0x18, 0x85, 0x6a, 0x10, 0x06, 0x2b, 0x2a, 0x87, 0xa0, 0x36, 
    0xfe, 0x10, 0x06, 0x2d, 0x3f, 0x19, 0x36, 0xe3, 0x10, 0x05, 0x24, 0x64, 0x3b, 0xc4, 0x8c, 0x3b, 
    0xe4, 0x64, 0x10, 0x05, 0x19, 0x3b, 0x45, 0x37, 0x3b, 0x10, 0x05, 0x30, 0x9c, 0x3b, 0x29, 0x36, 
    0x46, 0xe5, 0x64, 0x10, 0x08, 0x2b, 0xf8, 0x8d, 0x68, 0x10, 
};

static const uint16_t mf_rlefont_bankgthd10_glyph_offsets_0[95] = {
    0x0000, 0x0003, 0x000b, 0x0012, 0x001e, 0x0029, 0x0034, 0x003f, 
    0x0043, 0x004a, 0x0051, 0x0057, 0x005f, 0x0063, 0x0068, 0x006b, 
    0x0072, 0x0078, 0x007e, 0x0085, 0x008d, 0x0096, 0x009d, 0x00a6, 
    0x00ae, 0x00b4, 0x00bb, 0x00be, 0x00c2, 0x00cc, 0x00d2, 0x00db, 
    0x00e3, 0x00f3, 0x00fc, 0x0102, 0x0108, 0x010f, 0x0116, 0x011d, 
    0x0125, 0x012d, 0x0132, 0x0139, 0x0143, 0x0149, 0x0154, 0x015d, 
    0x0163, 0x0169, 0x0171, 0x0179, 0x0180, 0x0185, 0x018d, 0x0197, 
    0x01a2, 0x01ac, 0x01b3, 0x01bc, 0x01c3, 0x01cb, 0x01d3, 0x01da, 
    0x01df, 0x01e4, 0x01ed, 0x01f1, 0x01f5, 0x01fe, 0x0203, 0x020b, 
    0x0212, 0x021a, 0x021f, 0x0227, 0x0230, 0x0236, 0x023f, 0x0248, 
    0x024c, 0x0252, 0x025a, 0x0260, 0x0264, 0x026a, 0x0270, 0x0279, 
    0x0282, 0x028a, 0x0292, 0x0299, 0x02a3, 0x02aa, 0x02b4, 
};

static const struct mf_rlefont_char_range_s mf_rlefont_bankgthd10_char_ranges[] = {
    {32, 95, mf_rlefont_bankgthd10_glyph_offsets_0, mf_rlefont_bankgthd10_glyph_data_0},
};

const struct mf_rlefont_s mf_rlefont_bankgthd10 = {
    {
    "BankGothic Md BT Medium 10",
    "bankgthd10",
    10, /* width */
    10, /* height */
    2, /* min x advance */
    10, /* max x advance */
    0, /* baseline x */
    8, /* baseline y */
    10, /* line height */
    2, /* flags */
    63, /* fallback character */
    &mf_rlefont_character_width,
    &mf_rlefont_render_character,
    },
    4, /* version */
    mf_rlefont_bankgthd10_dictionary_data,
    mf_rlefont_bankgthd10_dictionary_offsets,
    34, /* rle dict count */
    47, /* total dict count */
    1, /* char range count */
    mf_rlefont_bankgthd10_char_ranges,
};

#ifdef MF_INCLUDED_FONTS
/* List entry for searching fonts by name. */
static const struct mf_font_list_s mf_rlefont_bankgthd10_listentry = {
    MF_INCLUDED_FONTS,
    (struct mf_font_s*)&mf_rlefont_bankgthd10
};
#undef MF_INCLUDED_FONTS
#define MF_INCLUDED_FONTS (&mf_rlefont_bankgthd10_listentry)
#endif


/* End of automatically generated font definition for bankgthd10. */

